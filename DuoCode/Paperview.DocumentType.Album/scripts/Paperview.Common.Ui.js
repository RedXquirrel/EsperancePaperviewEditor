/*!
* Paperview.Common.Ui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
*
* Generated by DuoCode Compiler 2.0.1542.0 [Trial]
*/
(function Paperview_Common_Ui() {
"use strict";
var $asm = {
    fullName: "Paperview.Common.Ui",
    anonymousTypes: [],
    types: [],
    $getAttrs: function() { return [new System.Reflection.AssemblyTitleAttribute.ctor("Paperview.Common.Ui"), new System.Reflection.AssemblyDescriptionAttribute.ctor(""), new System.Reflection.AssemblyConfigurationAttribute.ctor(""), new System.Reflection.AssemblyCompanyAttribute.ctor(""), new System.Reflection.AssemblyProductAttribute.ctor("Paperview.Common.Ui"), new System.Reflection.AssemblyCopyrightAttribute.ctor("Copyright \xA9  2016"), new System.Reflection.AssemblyTrademarkAttribute.ctor(""), new System.Reflection.AssemblyCultureAttribute.ctor(""), new System.Reflection.AssemblyVersionAttribute.ctor("1.0.0.0"), new System.Reflection.AssemblyFileVersionAttribute.ctor("1.0.0.0"), new DuoCode.Runtime.CompilerAttribute.ctor("2.0.1542.0")]; },
    resources: {
        "Paperview.Common.Ui.Localisation.UiResources$AuthorLabelText": "Author",
        "Paperview.Common.Ui.Localisation.UiResources$AuthorPleaseSelectText": "Please Select",
        "Paperview.Common.Ui.Localisation.UiResources$DocumentTypeDescriptionLabel": "Description",
        "Paperview.Common.Ui.Localisation.UiResources$DocumentTypeIdLabel": "Idx",
        "Paperview.Common.Ui.Localisation.UiResources$DocumentTypeNameLabel": "Name",
        "Paperview.Common.Ui.Localisation.UiResources$PublisherEmailAddressLabel": "Email Address",
        "Paperview.Common.Ui.Localisation.UiResources$PublisherIdLabel": "Id",
        "Paperview.Common.Ui.Localisation.UiResources$PublisherLabelText": "Publisher",
        "Paperview.Common.Ui.Localisation.UiResources$PublisherNameLabel": "Name",
        "Paperview.Common.Ui.Localisation.UiResources$PublisherPleaseSelectText": "Please Select",
        "Paperview.Common.Ui.Localisation.UiResources$PublisherWebAddressLabel": "Web Address"
    }
};
var $g = (typeof(global) !== "undefined" ? global : (typeof(window) !== "undefined" ? window : self));
var Paperview = $g.Paperview = $g.Paperview || {};
Paperview.Common = Paperview.Common || {};
Paperview.Common.Ui = Paperview.Common.Ui || {};
Paperview.Common.Ui.Helpers = Paperview.Common.Ui.Helpers || {};
Paperview.Common.Ui.Interfaces = Paperview.Common.Ui.Interfaces || {};
Paperview.Common.Ui.Models = Paperview.Common.Ui.Models || {};
Paperview.Common.Ui.Localisation = Paperview.Common.Ui.Localisation || {};
var $d = DuoCode.Runtime;
$d.$assemblies["Paperview.Common.Ui"] = $asm;
Paperview.Common.Ui.DocumentTypePane = $d.declare("Paperview.Common.Ui.DocumentTypePane", 0, $asm);
Paperview.Common.Ui.DropDownAuthorsListPane = $d.declare("Paperview.Common.Ui.DropDownAuthorsListPane", 
    0, $asm);
Paperview.Common.Ui.DropDownPublishersListPane = $d.declare("Paperview.Common.Ui.DropDownPublishersListPane", 
    0, $asm);
Paperview.Common.Ui.Helpers.Hx = $d.declare("Paperview.Common.Ui.Helpers.Hx", 0, $asm);
Paperview.Common.Ui.Helpers.UiExtensions = $d.declare("Paperview.Common.Ui.Helpers.UiExtensions", 0, 
    $asm);
Paperview.Common.Ui.LabelPane = $d.declare("Paperview.Common.Ui.LabelPane", 0, $asm);
Paperview.Common.Ui.Panel = $d.declare("Paperview.Common.Ui.Panel", 0, $asm);
Paperview.Common.Ui.PublisherPane = $d.declare("Paperview.Common.Ui.PublisherPane", 0, $asm);
Paperview.Common.Ui.Localisation.UiResources = $d.declare("Paperview.Common.Ui.Localisation.UiResources", 
    0, $asm);
Paperview.Common.Ui.Interfaces.IHtmlElement = $d.type("Paperview.Common.Ui.Interfaces.IHtmlElement", 66, $asm, function($t, $p) {});
$d.define(Paperview.Common.Ui.DocumentTypePane, null, function($t, $p) {
    $t.$intfs = [Paperview.Common.Ui.Interfaces.IHtmlElement];
    $t.cctor = function() {
        $t.TableClassKey = "standardNameValuePairTable";
        $t.NameCellClassKey = "standardNamePairCell";
        $t.ValueCellClassKey = "standardValuePairCell";
    };
    $t.$ator = function() {
        this._documentTypeMetaData = null;
        this._locale = null;
        this._parent = null;
        this._container = null;
    };
    $p.get_Container = function DocumentTypePane_get_Container() {
        return this._parent == null ? this._container : null;
    };
    $t.ctor = function DocumentTypePane(document, idiom, locale) {
        $t.$baseType.ctor.call(this);
        this.Initialise(document, idiom, locale);
    };
    $t.ctor.prototype = $p;
    $t.ctor$1 = function DocumentTypePane(parent, document, idiom, locale) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;
        this.Initialise(document, idiom, locale);
    };
    $t.ctor$1.prototype = $p;
    $p.Initialise = function DocumentTypePane_Initialise(documentTypeMetaData, idiom, locale) {
        this._documentTypeMetaData = documentTypeMetaData;
        this._locale = locale;
        this._container = document.createElement(Paperview.Common.Ui.Helpers.Hx().DivTagKey);

        switch (idiom) {
            case 0 /* Idiom.Phone */:
                this.CreateStack(idiom);
                break;
            case 1 /* Idiom.Tablet */:
                this.CreateTable(idiom);
                break;
            case 2 /* Idiom.Desktop */:
                this.CreateTable(idiom);
                break;
            case 3 /* Idiom.Unsupported */:
                this.CreateTable(idiom);
                break;
            default:
                throw new System.ArgumentOutOfRangeException.ctor$4("idiom", $d.boxEnum(Paperview.Interfaces.Idiom, 
                    idiom), null);
        }
    };
    $p.CreateStack = function DocumentTypePane_CreateStack(idiom) {
        Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(this._container, 
            Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
                Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, 
                    idiom)), Paperview.Common.Ui.Localisation.UiResources().get_DocumentTypeIdLabel())), 
            Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
                Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
                    idiom)), this._documentTypeMetaData.get_DocumentTypeId())), Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, 
                idiom)), Paperview.Common.Ui.Localisation.UiResources().get_DocumentTypeNameLabel())), 
            Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
                Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
                    idiom)), Paperview.Common.Ui.Helpers.UiExtensions.AssertLocale(this._documentTypeMetaData.get_DocumentTypeName(), 
                this._locale, this._documentTypeMetaData.get_LanguageDefault()))), Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, 
                idiom)), Paperview.Common.Ui.Localisation.UiResources().get_DocumentTypeDescriptionLabel())), 
            Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
                Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
                    idiom)), Paperview.Common.Ui.Helpers.UiExtensions.AssertLocale(this._documentTypeMetaData.get_DocumentTypeDescription(), 
                this._locale, this._documentTypeMetaData.get_LanguageDefault())));

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.CreateTable = function DocumentTypePane_CreateTable(idiom) {
        Paperview.Common.Ui.Helpers.Hx.AppendChild(this._container, Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateTableElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.TableClassKey, 
                idiom)), Paperview.Common.Ui.Helpers.Hx.AppendChild$1(Paperview.Common.Ui.Helpers.Hx.AppendChild$1(Paperview.Common.Ui.Helpers.Hx.CreateTrElement(), 
            Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), Paperview.Common.Ui.Localisation.UiResources().get_DocumentTypeIdLabel(), 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom)), Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
            this._documentTypeMetaData.get_DocumentTypeId(), Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
                idiom))), Paperview.Common.Ui.Helpers.Hx.AppendChild$1(Paperview.Common.Ui.Helpers.Hx.AppendChild$1(Paperview.Common.Ui.Helpers.Hx.CreateTrElement(), 
            Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), Paperview.Common.Ui.Localisation.UiResources().get_DocumentTypeNameLabel(), 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom)), Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
            Paperview.Common.Ui.Helpers.UiExtensions.AssertLocale(this._documentTypeMetaData.get_DocumentTypeName(), 
                this._locale, this._documentTypeMetaData.get_LanguageDefault()), Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
                idiom))), Paperview.Common.Ui.Helpers.Hx.AppendChild$1(Paperview.Common.Ui.Helpers.Hx.AppendChild$1(Paperview.Common.Ui.Helpers.Hx.CreateTrElement(), 
            Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), Paperview.Common.Ui.Localisation.UiResources().get_DocumentTypeDescriptionLabel(), 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom)), Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
            Paperview.Common.Ui.Helpers.UiExtensions.AssertLocale(this._documentTypeMetaData.get_DocumentTypeDescription(), 
                this._locale, this._documentTypeMetaData.get_LanguageDefault()), Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
                idiom))));

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.Paperview$Common$Ui$Interfaces$IHtmlElement$get_Container = $p.get_Container;
});
$d.define(Paperview.Common.Ui.DropDownAuthorsListPane, null, function($t, $p) {
    $t.$intfs = [Paperview.Common.Ui.Interfaces.IHtmlElement];
    $t.$ator = function() {
        this._authors = null;
        this._selectedAuthorIndex = 0;
        this._idiom = 0 /* Idiom */;
        this._selectedAuthorAction = null;
        this._parent = null;
        this._container = null;
        this._select = null;
    };
    $p.get_Container = function DropDownAuthorsListPane_get_Container() {
        return this._parent == null ? this._container : null;
    };
    $t.ctor = function DropDownAuthorsListPane(authors, selectedAction, idiom) {
        $t.$baseType.ctor.call(this);
        this.Initialise(authors, selectedAction, idiom);
    };
    $t.ctor.prototype = $p;
    $t.ctor$1 = function DropDownAuthorsListPane(parent, authors, selectedAction, idiom) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;
        this.Initialise(authors, selectedAction, idiom);
    };
    $t.ctor$1.prototype = $p;
    $p.Initialise = function DropDownAuthorsListPane_Initialise(authors, selectedAction, idiom) {
        // store data
        this._authors = authors;
        this._idiom = idiom;
        // store action
        this._selectedAuthorAction = selectedAction;
        // create container
        this._container = Paperview.Common.Ui.Helpers.Hx.CreateContainerControl();

        // switch on idiom
        switch (idiom) {
            case 0 /* Idiom.Phone */:
                this.CreateSelect(idiom);
                break;
            case 1 /* Idiom.Tablet */:
                this.CreateSelect(idiom);
                break;
            case 2 /* Idiom.Desktop */:
                this.CreateSelect(idiom);
                break;
            case 3 /* Idiom.Unsupported */:
                this.CreateSelect(idiom);
                break;
            default:
                throw new System.ArgumentOutOfRangeException.ctor$4("idiom", $d.boxEnum(Paperview.Interfaces.Idiom, 
                    idiom), null);
        }
    };
    $p.CreateSelect = function DropDownAuthorsListPane_CreateSelect(idiom) {
        this._select = $d.cast(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateSelectElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString(Paperview.Common.Helpers.AppStyles().StandardSelectClassKey, 
                idiom)), HTMLSelectElement);

        this._select.onchange = $d.delegate(function(onchangeevent) {
            System.Console.WriteLine$10(String.Format("Selected Index: {0}", [this._select.selectedIndex]));

            this._selectedAuthorIndex = this._select.selectedIndex - 1;

            if (this._selectedAuthorIndex >= 0) {
                System.Console.WriteLine$10(String.Format("Selected Author: {0}", [this._authors.get_Item(this._selectedAuthorIndex).get_Name()]));
            }

            this._selectedAuthorAction(this._select.selectedIndex - 1);

            return 0;
        }, this);

        Paperview.Common.Ui.Helpers.Hx.AppendChild(this._select, Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateOptionElement(), 
            Paperview.Common.Ui.Helpers.Hx().ValueAttKey, "-1"), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString(Paperview.Common.Helpers.AppStyles().StandardOptionClassKey, 
                idiom)), Paperview.Common.Ui.Localisation.UiResources().get_AuthorPleaseSelectText()));
        var $iter = this._authors;
        var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
        while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
            var author = $enumerator.System$Collections$IEnumerator$get_Current();
            Paperview.Common.Ui.Helpers.Hx.AppendChild(this._select, Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateOptionElement(), 
                Paperview.Common.Ui.Helpers.Hx().ValueAttKey, author.get_Id()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
                Paperview.Common.Ui.Helpers.Hx.AppendIdiomString(Paperview.Common.Helpers.AppStyles().StandardOptionClassKey, 
                    idiom)), author.get_Name()));
        }

        Paperview.Common.Ui.Helpers.Hx.AppendChild(this._container, this._select);

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.Paperview$Common$Ui$Interfaces$IHtmlElement$get_Container = $p.get_Container;
});
$d.define(Paperview.Common.Ui.DropDownPublishersListPane, null, function($t, $p) {
    $t.$intfs = [Paperview.Common.Ui.Interfaces.IHtmlElement];
    $t.$ator = function() {
        this._publishers = null;
        this._selectedPublisherIndex = 0;
        this._idiom = 0 /* Idiom */;
        this._selectedPublisherAction = null;
        this._parent = null;
        this._container = null;
        this._select = null;
    };
    $p.get_Container = function DropDownPublishersListPane_get_Container() {
        return this._parent == null ? this._container : null;
    };
    $t.ctor = function DropDownPublishersListPane(publishers, selectedAction, idiom) {
        $t.$baseType.ctor.call(this);
        this.Initialise(publishers, selectedAction, idiom);
    };
    $t.ctor.prototype = $p;
    $t.ctor$1 = function DropDownPublishersListPane(parent, publishers, selectedAction, idiom) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;
        this.Initialise(publishers, selectedAction, idiom);
    };
    $t.ctor$1.prototype = $p;
    $p.Initialise = function DropDownPublishersListPane_Initialise(publishers, selectedAction, idiom) {
        // store data
        this._publishers = publishers;
        this._idiom = idiom;
        // store action
        this._selectedPublisherAction = selectedAction;
        // create container
        this._container = Paperview.Common.Ui.Helpers.Hx.CreateContainerControl();

        // switch on idiom
        switch (idiom) {
            case 0 /* Idiom.Phone */:
                this.CreateSelect(idiom);
                break;
            case 1 /* Idiom.Tablet */:
                this.CreateSelect(idiom);
                break;
            case 2 /* Idiom.Desktop */:
                this.CreateSelect(idiom);
                break;
            case 3 /* Idiom.Unsupported */:
                this.CreateSelect(idiom);
                break;
            default:
                throw new System.ArgumentOutOfRangeException.ctor$4("idiom", $d.boxEnum(Paperview.Interfaces.Idiom, 
                    idiom), null);
        }
    };
    $p.CreateSelect = function DropDownPublishersListPane_CreateSelect(idiom) {
        this._select = $d.cast(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateSelectElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString(Paperview.Common.Helpers.AppStyles().StandardSelectClassKey, 
                idiom)), HTMLSelectElement);

        this._select.onchange = $d.delegate(function(onchangeevent) {
            System.Console.WriteLine$10(String.Format("Selected Index: {0}", [this._select.selectedIndex]));

            this._selectedPublisherIndex = this._select.selectedIndex - 1;

            if (this._selectedPublisherIndex >= 0) {
                System.Console.WriteLine$10(String.Format("Selected Publisher: {0}", [this._publishers.get_Item(this._selectedPublisherIndex).get_Name()]));
            }

            System.Console.WriteLine$10(String.Format("Selected Publisher Index: {0}", [this._select.selectedIndex - 1]));

            this._selectedPublisherAction(this._select.selectedIndex - 1);

            return 0;
        }, this);


        Paperview.Common.Ui.Helpers.Hx.AppendChild(this._select, Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateOptionElement(), 
            Paperview.Common.Ui.Helpers.Hx().ValueAttKey, "-1"), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString(Paperview.Common.Helpers.AppStyles().StandardOptionClassKey, 
                idiom)), Paperview.Common.Ui.Localisation.UiResources().get_PublisherPleaseSelectText()));
        var $iter = this._publishers;
        var $enumerator = $iter.System$Collections$IEnumerable$GetEnumerator();
        while ($enumerator.System$Collections$IEnumerator$MoveNext()) {
            var publisher = $enumerator.System$Collections$IEnumerator$get_Current();
            Paperview.Common.Ui.Helpers.Hx.AppendChild(this._select, Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateOptionElement(), 
                Paperview.Common.Ui.Helpers.Hx().ValueAttKey, publisher.get_Id()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
                Paperview.Common.Ui.Helpers.Hx.AppendIdiomString(Paperview.Common.Helpers.AppStyles().StandardOptionClassKey, 
                    idiom)), publisher.get_Name()));
        }

        Paperview.Common.Ui.Helpers.Hx.AppendChild(this._container, this._select);

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.Paperview$Common$Ui$Interfaces$IHtmlElement$get_Container = $p.get_Container;
});
$d.define(Paperview.Common.Ui.Helpers.Hx, null, function($t, $p) {
    $t.cctor = function() {
        $t.ATagKey = "a";
        $t.AbbrTagKey = "abbr";
        $t.AddressTagKey = "address";
        $t.AreaTagKey = "area";
        $t.ArticleTagKey = "article";
        $t.AsideTagKey = "aside";
        $t.AudioTagKey = "audio";
        $t.BTagKey = "b";
        $t.BaseTagKey = "base";
        $t.BdiTagKey = "bdi";
        $t.BdoTagKey = "bdo";
        $t.BlockquoteTagKey = "blockquote";
        $t.BodyTagKey = "body";
        $t.BrTagKey = "br";
        $t.ButtonTagKey = "button";
        $t.CanvasTagKey = "canvas";
        $t.CaptionTagKey = "caption";
        $t.CiteTagKey = "cite";
        $t.CodeTagKey = "code";
        $t.ColTagKey = "col";
        $t.ColgroupTagKey = "colgroup";
        $t.CommandTagKey = "command";
        $t.DatalistTagKey = "datalist";
        $t.DdTagKey = "dd";
        $t.DelTagKey = "del";
        $t.DetailsTagKey = "details";
        $t.DfnTagKey = "dfn";
        $t.DivTagKey = "div";
        $t.DlTagKey = "dl";
        $t.DtTagList = "dt";
        $t.EmTagKey = "em";
        $t.EmbedTagKey = "embed";
        $t.FieldsetTagKey = "fieldset";
        $t.FigcaptionTagKey = "figcaption";
        $t.FigureTagKey = "figure";
        $t.FooterTagKey = "footer";
        $t.FormTagKey = "form";
        $t.H1TagKey = "h1";
        $t.H2TagKey = "h2";
        $t.H3TagKey = "h3";
        $t.H4TagKey = "h4";
        $t.H5TagKey = "h5";
        $t.H6TagKey = "h6";
        $t.HeadTagKey = "head";
        $t.HeaderTagKey = "header";
        $t.HgroupTagKey = "hgroup";
        $t.HrTagKey = "hr";
        $t.HtmlTagKey = "html";
        $t.ITagKey = "i";
        $t.IframeTagKey = "iframe";
        $t.ImgTagKey = "img";
        $t.InputTagKey = "input";
        $t.InsTagKey = "ins";
        $t.KbdTagKey = "kbd";
        $t.KeygenTagKey = "keygen";
        $t.LabelTagKey = "label";
        $t.LegendTagKey = "legend";
        $t.LiTagKey = "li";
        $t.LinkTagKey = "link";
        $t.MapTagKey = "map";
        $t.MarkTagKey = "mark";
        $t.MenuTagKey = "menu";
        $t.MetaTagKey = "meta";
        $t.MeterTagKey = "meter";
        $t.NavTagKey = "nav";
        $t.NoscriptTagKey = "noscript";
        $t.ObjectTagKey = "object";
        $t.OlTagKey = "ol";
        $t.OptgroupTagKey = "optgroup";
        $t.OptionTagKey = "option";
        $t.OutputTagKey = "output";
        $t.PTagKey = "p";
        $t.ParamTagKey = "param";
        $t.PreTagKey = "pre";
        $t.ProgressTagKey = "progress";
        $t.QTagKey = "q";
        $t.RpTagKey = "rp";
        $t.RtTagKey = "rt";
        $t.RubyTagKey = "ruby";
        $t.STagKey = "s";
        $t.SampTagKey = "samp";
        $t.ScriptTagKey = "script";
        $t.SectionTagKey = "section";
        $t.SelectionTagKey = "selection";
        $t.SelectTagKey = "select";
        $t.SmallTagKey = "small";
        $t.SourceTagKey = "source";
        $t.SpanTagKey = "span";
        $t.StrongTagKey = "strong";
        $t.StyleTagKey = "style";
        $t.SubTagKey = "sub";
        $t.SummaryTagKey = "summary";
        $t.SupTagKey = "sup";
        $t.TableTagKey = "table";
        $t.TbodyTagKey = "tbody";
        $t.TdTagKey = "td";
        $t.TextareaTagKey = "textarea";
        $t.TfootTagKey = "tfoot";
        $t.ThTagKey = "th";
        $t.TheadTagKey = "thead";
        $t.TimeTagKey = "time";
        $t.TitleTagKey = "title";
        $t.TrTagKey = "tr";
        $t.TrackTagkey = "track";
        $t.UTagKey = "u";
        $t.UlTagKey = "ul";
        $t.VarTagKey = "var";
        $t.VideoTagKey = "video";
        $t.WbrTagKey = "wbr";
        $t.AccesskeyAttKey = "accesskey";
        $t.ClassAttKey = "class";
        $t.ContenteditableAttKey = "contenteditable";
        $t.ContextmenuAttKey = "contextmenu";
        $t.DirAttKey = "dir";
        $t.DraggableAttKey = "draggable";
        $t.DropzoneAttKey = "dropzone";
        $t.HiddenAttKey = "hidden";
        $t.IdAttKey = "id";
        $t.LangAttKey = "lang";
        $t.SpellcheckAttKey = "spellcheck";
        $t.StyleAttKey = "style";
        $t.TabindexAttKey = "tabindex";
        $t.TitleAttKey = "title";
        $t.TranslateAttKey = "translate";
        $t.ValueAttKey = "value";
        $t.OnabortAttKey = "onabort";
        $t.OnblurAttKey = "onblur";
        $t.OncanplayAttKey = "oncanplay";
        $t.OncanplaythroughAttKey = "oncanplaythrough";
        $t.OnchangeAttKey = "onchange";
        $t.OnclickAttKey = "onclick";
        $t.OncontextmenuAttKey = "oncontextmenu";
        $t.OndblclickAttKey = "ondblclick";
        $t.OndragAttKey = "ondrag";
        $t.OndragendAttKey = "ondragend";
        $t.OndragenterAttKey = "ondragenter";
        $t.OndragleaveAttKey = "ondragleave";
        $t.OndragoverAttKey = "ondragover";
        $t.OndragstartAttKey = "ondragstart";
        $t.OndropAttKey = "ondrop";
        $t.OndurationchangeAttKey = "ondurationchange";
        $t.OnemptiedAttKey = "onemptied";
        $t.OnendedAttKey = "onended";
        $t.OnerrorAttKey = "onerror";
        $t.OnfocusAttyKey = "onfocus";
        $t.OninputAttKey = "oninput";
        $t.OninvalidAttKey = "oninvalid";
        $t.OnkeydownAttKey = "onkeydown";
        $t.OnkeypressAttKey = "onkeypress";
        $t.OnkeyupAttKey = "onkeyup";
        $t.OnloadAttKey = "onload";
        $t.OnloadeddataAttKey = "onloadeddata";
        $t.OnloadedmetatdataAttKey = "onloadedmetadata";
        $t.OnloadStartAttKey = "onloadstart";
        $t.OnmousedownAttKey = "onmousedown";
        $t.OnmousemoveAttKey = "onmousemove";
        $t.OnmouseoutAttKey = "onmouseout";
        $t.OnmouseoverAttKey = "onmouseover";
        $t.OnmouseupAttKey = "onmouseup";
        $t.OnmousewheelAttKey = "onmousewheel";
        $t.OnpauseAttKey = "onpause";
        $t.OnplayAttKey = "onplay";
        $t.OnplayingAttKey = "onplaying";
        $t.OnprogressAttKey = "onprogress";
        $t.OnratechangeAttKey = "onratechange";
        $t.OnreadystatechangeAttKey = "onreadystatechange";
        $t.OnresetAttKey = "onreset";
        $t.OnscrollAttKey = "onscroll";
        $t.OnseekedAttKey = "onseeked";
        $t.OnseekingAttKey = "onseeking";
        $t.OnselectAttKey = "onselect";
        $t.OnshowAttKey = "onshow";
        $t.OnstalledAttKey = "onstalled";
        $t.OnsubmitAttKey = "onsubmit";
        $t.OnsuspendAttKey = "onsuspend";
        $t.OntimeupdateAttKey = "ontimeupdate";
        $t.OnvolumechangeAttKey = "onvolumechange";
        $t.OnwaitingAttKey = "onwaiting";
        $t.Xml_langAttKey = "xml:lang";
        $t.Xml_spaceAttKey = "xml:space";
        $t.Xml_baseAttKey = "xml:base";
    };
    $t.CreateAElement = function Hx_CreateAElement() {
        return $t.GetTag($t().ATagKey);
    };
    $t.CreateAbbrElement = function Hx_CreateAbbrElement() {
        return $t.GetTag($t().AbbrTagKey);
    };
    $t.CreateAddressElement = function Hx_CreateAddressElement() {
        return $t.GetTag($t().AddressTagKey);
    };
    $t.CreateAreaElement = function Hx_CreateAreaElement() {
        return $t.GetTag($t().AreaTagKey);
    };
    $t.CreateArticleElement = function Hx_CreateArticleElement() {
        return $t.GetTag($t().ArticleTagKey);
    };
    $t.CreateAsideElement = function Hx_CreateAsideElement() {
        return $t.GetTag($t().AsideTagKey);
    };
    $t.CreateAudioElement = function Hx_CreateAudioElement() {
        return $t.GetTag($t().AudioTagKey);
    };
    $t.CreateBElement = function Hx_CreateBElement() {
        return $t.GetTag($t().BTagKey);
    };
    $t.CreateBaseElement = function Hx_CreateBaseElement() {
        return $t.GetTag($t().BaseTagKey);
    };
    $t.CreateBdiElement = function Hx_CreateBdiElement() {
        return $t.GetTag($t().BdiTagKey);
    };
    $t.CreateBdoElement = function Hx_CreateBdoElement() {
        return $t.GetTag($t().BdoTagKey);
    };
    $t.CreateBlockquoteElement = function Hx_CreateBlockquoteElement() {
        return $t.GetTag($t().BlockquoteTagKey);
    };
    $t.CreateBodyElement = function Hx_CreateBodyElement() {
        return $t.GetTag($t().BodyTagKey);
    };
    $t.CreateBrElement = function Hx_CreateBrElement() {
        return $t.GetTag($t().BrTagKey);
    };
    $t.CreateButtonElement = function Hx_CreateButtonElement() {
        return $t.GetTag($t().ButtonTagKey);
    };
    $t.CreateCanvasElement = function Hx_CreateCanvasElement() {
        return $t.GetTag($t().CanvasTagKey);
    };
    $t.CreateCaptionElement = function Hx_CreateCaptionElement() {
        return $t.GetTag($t().CaptionTagKey);
    };
    $t.CreateCiteElement = function Hx_CreateCiteElement() {
        return $t.GetTag($t().CiteTagKey);
    };
    $t.CreateCodeElement = function Hx_CreateCodeElement() {
        return $t.GetTag($t().CodeTagKey);
    };
    $t.CreateColElement = function Hx_CreateColElement() {
        return $t.GetTag($t().ColTagKey);
    };
    $t.CreateColgroupElement = function Hx_CreateColgroupElement() {
        return $t.GetTag($t().ColgroupTagKey);
    };
    $t.CreateCommandElement = function Hx_CreateCommandElement() {
        return $t.GetTag($t().CommandTagKey);
    };
    $t.CreateDatalistElement = function Hx_CreateDatalistElement() {
        return $t.GetTag($t().DatalistTagKey);
    };
    $t.CreateDdElement = function Hx_CreateDdElement() {
        return $t.GetTag($t().DdTagKey);
    };
    $t.CreateDelElement = function Hx_CreateDelElement() {
        return $t.GetTag($t().DelTagKey);
    };
    $t.CreateDetailsElement = function Hx_CreateDetailsElement() {
        return $t.GetTag($t().DetailsTagKey);
    };
    $t.CreateDfnElement = function Hx_CreateDfnElement() {
        return $t.GetTag($t().DfnTagKey);
    };
    $t.CreateDivElement = function Hx_CreateDivElement() {
        return $t.GetTag($t().DivTagKey);
    };
    $t.CreateDlElement = function Hx_CreateDlElement() {
        return $t.GetTag($t().DlTagKey);
    };
    $t.CreateDtElement = function Hx_CreateDtElement() {
        return $t.GetTag($t().DtTagList);
    };
    $t.CreateEmElement = function Hx_CreateEmElement() {
        return $t.GetTag($t().EmTagKey);
    };
    $t.CreateEmbedElement = function Hx_CreateEmbedElement() {
        return $t.GetTag($t().EmbedTagKey);
    };
    $t.CreateFieldsetElement = function Hx_CreateFieldsetElement() {
        return $t.GetTag($t().FieldsetTagKey);
    };
    $t.CreateFigcaptionElement = function Hx_CreateFigcaptionElement() {
        return $t.GetTag($t().FigcaptionTagKey);
    };
    $t.CreateFigureElement = function Hx_CreateFigureElement() {
        return $t.GetTag($t().FigureTagKey);
    };
    $t.CreateFooterElement = function Hx_CreateFooterElement() {
        return $t.GetTag($t().FooterTagKey);
    };
    $t.CreateFormElement = function Hx_CreateFormElement() {
        return $t.GetTag($t().FormTagKey);
    };
    $t.CreateH1Element = function Hx_CreateH1Element() {
        return $t.GetTag($t().H1TagKey);
    };
    $t.CreateH2Element = function Hx_CreateH2Element() {
        return $t.GetTag($t().H2TagKey);
    };
    $t.CreateH3Element = function Hx_CreateH3Element() {
        return $t.GetTag($t().H3TagKey);
    };
    $t.CreateH4Element = function Hx_CreateH4Element() {
        return $t.GetTag($t().H4TagKey);
    };
    $t.CreateH5Element = function Hx_CreateH5Element() {
        return $t.GetTag($t().H5TagKey);
    };
    $t.CreateH6Element = function Hx_CreateH6Element() {
        return $t.GetTag($t().H6TagKey);
    };
    $t.CreateHeadElement = function Hx_CreateHeadElement() {
        return $t.GetTag($t().HeadTagKey);
    };
    $t.CreateHeaderElement = function Hx_CreateHeaderElement() {
        return $t.GetTag($t().HeaderTagKey);
    };
    $t.CreateHgroupElement = function Hx_CreateHgroupElement() {
        return $t.GetTag($t().HgroupTagKey);
    };
    $t.CreateHrElement = function Hx_CreateHrElement() {
        return $t.GetTag($t().HrTagKey);
    };
    $t.CreateHtmlElement = function Hx_CreateHtmlElement() {
        return $t.GetTag($t().HtmlTagKey);
    };
    $t.CreateIElement = function Hx_CreateIElement() {
        return $t.GetTag($t().ITagKey);
    };
    $t.CreateIframeElement = function Hx_CreateIframeElement() {
        return $t.GetTag($t().IframeTagKey);
    };
    $t.CreateImgElement = function Hx_CreateImgElement() {
        return $t.GetTag($t().ImgTagKey);
    };
    $t.CreateInputElement = function Hx_CreateInputElement() {
        return $t.GetTag($t().InputTagKey);
    };
    $t.CreateInsElement = function Hx_CreateInsElement() {
        return $t.GetTag($t().InsTagKey);
    };
    $t.CreateKbdElement = function Hx_CreateKbdElement() {
        return $t.GetTag($t().KbdTagKey);
    };
    $t.CreateKeygenElement = function Hx_CreateKeygenElement() {
        return $t.GetTag($t().KeygenTagKey);
    };
    $t.CreateLabelElement = function Hx_CreateLabelElement() {
        return $t.GetTag($t().LabelTagKey);
    };
    $t.CreateLegendElement = function Hx_CreateLegendElement() {
        return $t.GetTag($t().LegendTagKey);
    };
    $t.CreateLiElement = function Hx_CreateLiElement() {
        return $t.GetTag($t().LiTagKey);
    };
    $t.CreateLinkElement = function Hx_CreateLinkElement() {
        return $t.GetTag($t().LinkTagKey);
    };
    $t.CreateMapElement = function Hx_CreateMapElement() {
        return $t.GetTag($t().MapTagKey);
    };
    $t.CreateMarkElement = function Hx_CreateMarkElement() {
        return $t.GetTag($t().MarkTagKey);
    };
    $t.CreateMenuElement = function Hx_CreateMenuElement() {
        return $t.GetTag($t().MenuTagKey);
    };
    $t.CreateMetaElement = function Hx_CreateMetaElement() {
        return $t.GetTag($t().MetaTagKey);
    };
    $t.CreateMeterElement = function Hx_CreateMeterElement() {
        return $t.GetTag($t().MeterTagKey);
    };
    $t.CreateNavElement = function Hx_CreateNavElement() {
        return $t.GetTag($t().NavTagKey);
    };
    $t.CreateNoscriptElement = function Hx_CreateNoscriptElement() {
        return $t.GetTag($t().NoscriptTagKey);
    };
    $t.CreateObjectElement = function Hx_CreateObjectElement() {
        return $t.GetTag($t().ObjectTagKey);
    };
    $t.CreateOlElement = function Hx_CreateOlElement() {
        return $t.GetTag($t().OlTagKey);
    };
    $t.CreateOptgroupElement = function Hx_CreateOptgroupElement() {
        return $t.GetTag($t().OptgroupTagKey);
    };
    $t.CreateOptionElement = function Hx_CreateOptionElement() {
        return $t.GetTag($t().OptionTagKey);
    };
    $t.CreateOutputElement = function Hx_CreateOutputElement() {
        return $t.GetTag($t().OutputTagKey);
    };
    $t.CreatePElement = function Hx_CreatePElement() {
        return $t.GetTag($t().PTagKey);
    };
    $t.CreateParamElement = function Hx_CreateParamElement() {
        return $t.GetTag($t().ParamTagKey);
    };
    $t.CreatePreElement = function Hx_CreatePreElement() {
        return $t.GetTag($t().PreTagKey);
    };
    $t.CreateProgressElement = function Hx_CreateProgressElement() {
        return $t.GetTag($t().ProgressTagKey);
    };
    $t.CreateQElement = function Hx_CreateQElement() {
        return $t.GetTag($t().QTagKey);
    };
    $t.CreateRpElement = function Hx_CreateRpElement() {
        return $t.GetTag($t().RpTagKey);
    };
    $t.CreateRtElement = function Hx_CreateRtElement() {
        return $t.GetTag($t().RtTagKey);
    };
    $t.CreateRubyElement = function Hx_CreateRubyElement() {
        return $t.GetTag($t().RubyTagKey);
    };
    $t.CreateSElement = function Hx_CreateSElement() {
        return $t.GetTag($t().STagKey);
    };
    $t.CreateSampElement = function Hx_CreateSampElement() {
        return $t.GetTag($t().SampTagKey);
    };
    $t.CreateScriptElement = function Hx_CreateScriptElement() {
        return $t.GetTag($t().ScriptTagKey);
    };
    $t.CreateSectionElement = function Hx_CreateSectionElement() {
        return $t.GetTag($t().SectionTagKey);
    };
    $t.CreateSelectElement = function Hx_CreateSelectElement() {
        return $t.GetTag($t().SelectTagKey);
    };
    $t.CreateSmallElement = function Hx_CreateSmallElement() {
        return $t.GetTag($t().SmallTagKey);
    };
    $t.CreateSourceElement = function Hx_CreateSourceElement() {
        return $t.GetTag($t().SourceTagKey);
    };
    $t.CreateSpanElement = function Hx_CreateSpanElement() {
        return $t.GetTag($t().SpanTagKey);
    };
    $t.CreateStrongElement = function Hx_CreateStrongElement() {
        return $t.GetTag($t().StrongTagKey);
    };
    $t.CreateStyleElement = function Hx_CreateStyleElement() {
        return $t.GetTag($t().StyleTagKey);
    };
    $t.CreateSubElement = function Hx_CreateSubElement() {
        return $t.GetTag($t().SubTagKey);
    };
    $t.CreateSummaryElement = function Hx_CreateSummaryElement() {
        return $t.GetTag($t().SummaryTagKey);
    };
    $t.CreateSupElement = function Hx_CreateSupElement() {
        return $t.GetTag($t().SupTagKey);
    };
    $t.CreateTableElement = function Hx_CreateTableElement() {
        return $t.GetTag($t().TableTagKey);
    };
    $t.CreateTbodyElement = function Hx_CreateTbodyElement() {
        return $t.GetTag($t().TbodyTagKey);
    };
    $t.CreateTdElement = function Hx_CreateTdElement() {
        return $t.GetTag($t().TdTagKey);
    };
    $t.CreateTextareaElement = function Hx_CreateTextareaElement() {
        return $t.GetTag($t().TextareaTagKey);
    };
    $t.CreateTfootElement = function Hx_CreateTfootElement() {
        return $t.GetTag($t().TfootTagKey);
    };
    $t.CreateThElement = function Hx_CreateThElement() {
        return $t.GetTag($t().ThTagKey);
    };
    $t.CreateTheadElement = function Hx_CreateTheadElement() {
        return $t.GetTag($t().TheadTagKey);
    };
    $t.CreateTimeElement = function Hx_CreateTimeElement() {
        return $t.GetTag($t().TimeTagKey);
    };
    $t.CreateTitleElement = function Hx_CreateTitleElement() {
        return $t.GetTag($t().TitleTagKey);
    };
    $t.CreateTrElement = function Hx_CreateTrElement() {
        return $t.GetTag($t().TrTagKey);
    };
    $t.CreateTrackElement = function Hx_CreateTrackElement() {
        return $t.GetTag($t().TrackTagkey);
    };
    $t.CreateUElement = function Hx_CreateUElement() {
        return $t.GetTag($t().UTagKey);
    };
    $t.CreateUlElement = function Hx_CreateUlElement() {
        return $t.GetTag($t().UlTagKey);
    };
    $t.CreateVarElement = function Hx_CreateVarElement() {
        return $t.GetTag($t().VarTagKey);
    };
    $t.CreateVideoElement = function Hx_CreateVideoElement() {
        return $t.GetTag($t().VideoTagKey);
    };
    $t.CreateWbrElement = function Hx_CreateWbrElement() {
        return $t.GetTag($t().WbrTagKey);
    };
    $t.CreateContainerControl = function Hx_CreateContainerControl() {
        return document.createElement(Paperview.Common.Ui.Helpers.Hx().DivTagKey);
    };
    $t.AppendIdiomString = function Hx_AppendIdiomString(classKey, idiom) {
        return String.Format("{0}{1}", [classKey, $d.boxEnum(Paperview.Interfaces.Idiom, idiom).toString()]);
    };
    $t.AppendChild = function Hx_AppendChild(parent, child) {
        parent.appendChild(child);

        return parent;
    };
    $t.AppendChild$1 = function Hx_AppendChild(parent, child, innerHTML, styleKey) {
        child.innerHTML = innerHTML;
        child.setAttribute("class", styleKey);
        parent.appendChild(child);

        return parent;
    };
    $t.SetAttribute = function Hx_SetAttribute(element, name, value) {
        element.setAttribute(name, value);
        return element;
    };
    $t.InnerHtml = function Hx_InnerHtml(element, innerHtml) {
        element.innerHTML = innerHtml;

        return element;
    };
    $t.GetTag = function Hx_GetTag(key) {
        return document.createElement(key);
    };
});
$d.define(Paperview.Common.Ui.Helpers.UiExtensions, null, function($t, $p) {
    $t.AssertLocale = function UiExtensions_AssertLocale(localeDictionary, locale, defaultLocale) {
        // Cascade keys from specified locale, to default locale, then at worst return string.empty.
        return localeDictionary.ContainsKey(locale) ? localeDictionary.get_Item(locale) : (localeDictionary.ContainsKey(defaultLocale) ? localeDictionary.get_Item(defaultLocale) : String.Empty);
    };
    $t.GetContainer = function UiExtensions_GetContainer(control) {
        return control.Paperview$Common$Ui$Interfaces$IHtmlElement$get_Container();
    };
});
$d.define(Paperview.Common.Ui.LabelPane, null, function($t, $p) {
    $t.$intfs = [Paperview.Common.Ui.Interfaces.IHtmlElement];
    $t.cctor = function() {
        $t.StandardLabelClassKey = "standardLabel";
    };
    $t.$ator = function() {
        this._idiom = 0 /* Idiom */;
        this._text = null;
        this._parent = null;
        this._container = null;
        this._nbspaceKey = "&nbsp;";
        this._textCase = 0 /* TextCase */;
    };
    $p.get_Container = function LabelPane_get_Container() {
        return this._parent == null ? this._container : null;
    };
    $p.get_TextCase = function LabelPane_get_TextCase() {
        return this._textCase;
    };
    $p.set_TextCase = function LabelPane_set_TextCase(value) {
        this._textCase = value;
        this.Initialise(!String.IsNullOrEmpty(this._text) ? this._text : this._nbspaceKey, this._idiom);
        return value;
    };
    $p.get_Text = function LabelPane_get_Text() {
        return this._text;
    };
    $p.set_Text = function LabelPane_set_Text(value) {
        this._text = value;
        this.Initialise(!String.IsNullOrEmpty(this._text) ? this._text : this._nbspaceKey, this._idiom);
        return value;
    };
    $t.ctor = function LabelPane(idiom) {
        $t.$baseType.ctor.call(this);
        this._idiom = idiom;
        this.Initialise(String.Empty, idiom);
    };
    $t.ctor.prototype = $p;
    $t.ctor$2 = function LabelPane(text, idiom) {
        $t.$baseType.ctor.call(this);
        this._idiom = idiom;
        this.Initialise(text, idiom);
    };
    $t.ctor$2.prototype = $p;
    $t.ctor$1 = function LabelPane(parent, idiom) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;
        this._idiom = idiom;
        this.Initialise(String.Empty, idiom);
    };
    $t.ctor$1.prototype = $p;
    $t.ctor$3 = function LabelPane(parent, text, idiom) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;
        this._idiom = idiom;
        this.Initialise(text, idiom);
    };
    $t.ctor$3.prototype = $p;
    $p.Initialise = function LabelPane_Initialise(text, idiom) {
        this._text = text;

        if (this._container == null) {
            this._container = Paperview.Common.Ui.Helpers.Hx.CreateDivElement();
        }
        else {
            Paperview.Common.Ui.Helpers.Hx.InnerHtml(this._container, String.Empty);
        }

        switch (idiom) {
            case 0 /* Idiom.Phone */:
                this.Create(idiom);
                break;
            case 1 /* Idiom.Tablet */:
                this.Create(idiom);
                break;
            case 2 /* Idiom.Desktop */:
                this.Create(idiom);
                break;
            case 3 /* Idiom.Unsupported */:
                this.Create(idiom);
                break;
            default:
                throw new System.ArgumentOutOfRangeException.ctor$4("idiom", $d.boxEnum(Paperview.Interfaces.Idiom, 
                    idiom), null);
        }
    };
    $p.Create = function LabelPane_Create(idiom) {
        Paperview.Common.Ui.Helpers.Hx.AppendChild(this._container, Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            this.CasedText()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.StandardLabelClassKey, 
            idiom)));

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.CasedText = function LabelPane_CasedText() {
        switch (this._textCase) {
            case 0 /* TextCase.Normal */:
                return this._text;
            case 1 /* TextCase.Upper */:
                return this._text.toUpperCase();
            case 2 /* TextCase.Lower */:
                return this._text.toLowerCase();
            default:
                throw new System.ArgumentOutOfRangeException.ctor();
        }
    };
    $p.Paperview$Common$Ui$Interfaces$IHtmlElement$get_Container = $p.get_Container;
});
Paperview.Common.Ui.Models.TextCase = $d.typeEnum("Paperview.Common.Ui.Models.TextCase", 45, $asm, 257, ["Normal", "Upper", "Lower"], [0, 1, 2]);
$d.define(Paperview.Common.Ui.Panel, null, function($t, $p) {
    $t.$intfs = [Paperview.Common.Ui.Interfaces.IHtmlElement];
    $t.cctor = function() {
        $t.DivTagKey = "div";
        $t.ClassAttributeKey = "class";
        $t.ContainerCellClassKey = "standardPanelContainerCell";
        $t.TitleCellClassKey = "standardPanelTitleCell";
        $t.ContentCellClassKey = "standardPanelContentCell";
    };
    $t.$ator = function() {
        this._parent = null;
        this._container = null;
    };
    $p.get_Container = function Panel_get_Container() {
        return this._parent == null ? this._container : null;
    };
    $t.ctor = function Panel(content, panelTitle, idiom) {
        $t.$baseType.ctor.call(this);
        this.Initialise(content, panelTitle, idiom);
    };
    $t.ctor.prototype = $p;
    $t.ctor$1 = function Panel(parent, content, panelTitle, idiom) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;

        this.Initialise(content, panelTitle, idiom);
    };
    $t.ctor$1.prototype = $p;
    $p.Initialise = function Panel_Initialise(content, panelTitle, idiom) {
        this._container = Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, $t.ContainerCellClassKey), Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.TitleCellClassKey, 
                idiom)), panelTitle)), Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ContentCellClassKey, 
                idiom)), content));

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.Paperview$Common$Ui$Interfaces$IHtmlElement$get_Container = $p.get_Container;
});
$d.define(Paperview.Common.Ui.PublisherPane, null, function($t, $p) {
    $t.$intfs = [Paperview.Common.Ui.Interfaces.IHtmlElement];
    $t.cctor = function() {
        $t.TableClassKey = "standardNameValuePairTable";
        $t.NameCellClassKey = "standardNamePairCell";
        $t.ValueCellClassKey = "standardValuePairCell";
    };
    $t.$ator = function() {
        this._idiom = 0 /* Idiom */;
        this._publisher = null;
        this._parent = null;
        this._container = null;
        this._nbspaceKey = "&nbsp;";
    };
    $p.get_Container = function PublisherPane_get_Container() {
        return this._parent == null ? this._container : null;
    };
    $t.ctor = function PublisherPane(idiom) {
        $t.$baseType.ctor.call(this);
        this._idiom = idiom;
        this.Initialise((function() {
            var $obj = new Paperview.Common.Publisher.ctor();
            $obj.set_Id(this._nbspaceKey);
            $obj.set_Name(this._nbspaceKey);
            $obj.set_Email(this._nbspaceKey);
            $obj.set_Url(this._nbspaceKey);
            return $obj;
        }).call(this), idiom);
    };
    $t.ctor.prototype = $p;
    $t.ctor$2 = function PublisherPane(publisher, idiom) {
        $t.$baseType.ctor.call(this);
        this._idiom = idiom;
        this.Initialise(publisher, idiom);
    };
    $t.ctor$2.prototype = $p;
    $t.ctor$1 = function PublisherPane(parent, idiom) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;
        this._idiom = idiom;
        this.Initialise((function() {
            var $obj = new Paperview.Common.Publisher.ctor();
            $obj.set_Id(this._nbspaceKey);
            $obj.set_Name(this._nbspaceKey);
            $obj.set_Email(this._nbspaceKey);
            $obj.set_Url(this._nbspaceKey);
            return $obj;
        }).call(this), idiom);
    };
    $t.ctor$1.prototype = $p;
    $t.ctor$3 = function PublisherPane(parent, publisher, idiom) {
        $t.$baseType.ctor.call(this);
        this._parent = parent;
        this._idiom = idiom;
        this.Initialise(publisher, idiom);
    };
    $t.ctor$3.prototype = $p;
    $p.get_Publisher = function PublisherPane_get_Publisher() {
        return this._publisher;
    };
    $p.set_Publisher = function PublisherPane_set_Publisher(value) {
        this._publisher = value;
        this.Initialise(this._publisher != null ? this.get_Publisher() : (function() {
            var $obj = new Paperview.Common.Publisher.ctor();
            $obj.set_Id(this._nbspaceKey);
            $obj.set_Name(this._nbspaceKey);
            $obj.set_Email(this._nbspaceKey);
            $obj.set_Url(this._nbspaceKey);
            return $obj;
        }).call(this), this._idiom);
        return value;
    };
    $p.Initialise = function PublisherPane_Initialise(publisher, idiom) {
        this._publisher = publisher;

        if (this._container == null) {
            this._container = Paperview.Common.Ui.Helpers.Hx.CreateDivElement();
        }
        else {
            Paperview.Common.Ui.Helpers.Hx.InnerHtml(this._container, String.Empty);
        }

        switch (idiom) {
            case 0 /* Idiom.Phone */:
                this.CreateStack(idiom);
                break;
            case 1 /* Idiom.Tablet */:
                this.CreateTable(idiom);
                break;
            case 2 /* Idiom.Desktop */:
                this.CreateTable(idiom);
                break;
            case 3 /* Idiom.Unsupported */:
                this.CreateTable(idiom);
                break;
            default:
                throw new System.ArgumentOutOfRangeException.ctor$4("idiom", $d.boxEnum(Paperview.Interfaces.Idiom, 
                    idiom), null);
        }
    };
    $p.CreateStack = function PublisherPane_CreateStack(idiom) {
        Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(this._container, 
            Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
                Paperview.Common.Ui.Localisation.UiResources().get_PublisherIdLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
                Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            this._publisher.get_Id()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Localisation.UiResources().get_PublisherNameLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            this._publisher.get_Name()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Localisation.UiResources().get_PublisherEmailAddressLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            this._publisher.get_Email()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            Paperview.Common.Ui.Localisation.UiResources().get_PublisherWebAddressLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
            Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateDivElement(), 
            this._publisher.get_Url()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom)));

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.CreateTable = function PublisherPane_CreateTable(idiom) {
        Paperview.Common.Ui.Helpers.Hx.AppendChild(this._container, Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.CreateTableElement(), 
            Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.TableClassKey, 
                idiom)), Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.CreateTrElement(), 
            Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
                Paperview.Common.Ui.Localisation.UiResources().get_PublisherIdLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
                Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
            this._publisher.get_Id()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom)))), Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.CreateTrElement(), 
            Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
                Paperview.Common.Ui.Localisation.UiResources().get_PublisherNameLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
                Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
            this._publisher.get_Name()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom)))), Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.CreateTrElement(), 
            Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
                Paperview.Common.Ui.Localisation.UiResources().get_PublisherEmailAddressLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
                Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
            this._publisher.get_Email()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom)))), Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.AppendChild(Paperview.Common.Ui.Helpers.Hx.CreateTrElement(), 
            Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
                Paperview.Common.Ui.Localisation.UiResources().get_PublisherWebAddressLabel()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, 
                Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.NameCellClassKey, idiom))), Paperview.Common.Ui.Helpers.Hx.SetAttribute(Paperview.Common.Ui.Helpers.Hx.InnerHtml(Paperview.Common.Ui.Helpers.Hx.CreateTdElement(), 
            this._publisher.get_Url()), Paperview.Common.Ui.Helpers.Hx().ClassAttKey, Paperview.Common.Ui.Helpers.Hx.AppendIdiomString($t.ValueCellClassKey, 
            idiom)))));

        this._parent != null ? this._parent.appendChild(this._container) : null;
    };
    $p.Paperview$Common$Ui$Interfaces$IHtmlElement$get_Container = $p.get_Container;
});
$d.define(Paperview.Common.Ui.Localisation.UiResources, null, function($t, $p) {
    $t.cctor = function() {
        $t.resourceMan = null;
        $t.resourceCulture = null;
    };
    $t.ctor = function UiResources() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $t.get_ResourceManager = function UiResources_get_ResourceManager() {
        if ($t().resourceMan === null) {
            var temp = new System.Resources.ResourceManager.ctor("Paperview.Common.Ui.Localisation.UiResources", 
                $d.typeOf(Paperview.Common.Ui.Localisation.UiResources).get_Assembly());
            $t().resourceMan = temp;
        }
        return $t().resourceMan;
    };
    $t.get_Culture = function UiResources_get_Culture() {
        return $t().resourceCulture;
    };
    $t.set_Culture = function UiResources_set_Culture(value) {
        $t().resourceCulture = value;
        return value;
    };
    $t.get_AuthorLabelText = function UiResources_get_AuthorLabelText() {
        return $t().get_ResourceManager().GetString("AuthorLabelText", $t().resourceCulture);
    };
    $t.get_AuthorPleaseSelectText = function UiResources_get_AuthorPleaseSelectText() {
        return $t().get_ResourceManager().GetString("AuthorPleaseSelectText", $t().resourceCulture);
    };
    $t.get_DocumentTypeDescriptionLabel = function UiResources_get_DocumentTypeDescriptionLabel() {
        return $t().get_ResourceManager().GetString("DocumentTypeDescriptionLabel", $t().resourceCulture);
    };
    $t.get_DocumentTypeIdLabel = function UiResources_get_DocumentTypeIdLabel() {
        return $t().get_ResourceManager().GetString("DocumentTypeIdLabel", $t().resourceCulture);
    };
    $t.get_DocumentTypeNameLabel = function UiResources_get_DocumentTypeNameLabel() {
        return $t().get_ResourceManager().GetString("DocumentTypeNameLabel", $t().resourceCulture);
    };
    $t.get_PublisherEmailAddressLabel = function UiResources_get_PublisherEmailAddressLabel() {
        return $t().get_ResourceManager().GetString("PublisherEmailAddressLabel", $t().resourceCulture);
    };
    $t.get_PublisherIdLabel = function UiResources_get_PublisherIdLabel() {
        return $t().get_ResourceManager().GetString("PublisherIdLabel", $t().resourceCulture);
    };
    $t.get_PublisherLabelText = function UiResources_get_PublisherLabelText() {
        return $t().get_ResourceManager().GetString("PublisherLabelText", $t().resourceCulture);
    };
    $t.get_PublisherNameLabel = function UiResources_get_PublisherNameLabel() {
        return $t().get_ResourceManager().GetString("PublisherNameLabel", $t().resourceCulture);
    };
    $t.get_PublisherPleaseSelectText = function UiResources_get_PublisherPleaseSelectText() {
        return $t().get_ResourceManager().GetString("PublisherPleaseSelectText", $t().resourceCulture);
    };
    $t.get_PublisherWebAddressLabel = function UiResources_get_PublisherWebAddressLabel() {
        return $t().get_ResourceManager().GetString("PublisherWebAddressLabel", $t().resourceCulture);
    };
});
return $asm;
})();
//# sourceMappingURL=Paperview.Common.Ui.js.map
